// SVM model
// Generated by the nicofix export module

`ifndef _SVM_MODEL_MEMORY_H
`define _SVM_MODEL_MEMORY_H

// Width of a value in a SVM vector
`define SVM_PARAM_WIDTH 11
// Width of scaled coeffs
`define SVM_COEF_WIDTH_INT 0
`define SVM_COEF_WIDTH_FRAC 16
// Width of coeff signs (-1, 0 or 1)
`define SVM_COEF_SIGN_WIDTH 1
// Width of the sum
`define SVM_SUM_WIDTH 13
// Width of rho (scaled)
`define SVM_RHO_WIDTH_INT 0
`define SVM_RHO_WIDTH_FRAC 17
// Width of a distance
`define SVM_DISTANCE_WIDTH_INT 8
`define SVM_DISTANCE_WIDTH_FRAC 16
// Width of the CORDIC
`define SVM_CORDIC_WIDTH 15
`define SVM_CORDIC_WIDTH_LN 4
// Width of the CORDIC intermediary results
`define SVM_CORDIC_INTER_WIDTH 17
// Width of precomputed log increments
`define SVM_LOG_INCR_WIDTH 17
// Type of kernel (RBF or CORDIC)
`define SVM_KERNEL_TYPE_CORDIC 1
// Number of classes
`define SVM_CLASS_COUNT 8
// log2(Number of classes)
`define SVM_CLASS_COUNT_LN 3
// Width of a class value
`define SVM_CLASS_WIDTH 4
// Number of binary decisions
`define SVM_DECISION_COUNT 28
// Width of a binary decision
`define SVM_DECISION_WIDTH 5
// Number of values in a SVM vector
`define SVM_PARAM_COUNT 3
// Width of an index of a SVM param
`define SVM_PARAM_INDEX_WIDTH 2
// Number of support vectors
`define SVM_SV_COUNT 1745

// Offset of the first packet to take into account for SVM
`define SVM_PACKETS_SIZE_OFFSET 2

// Number of unrolls of the SV computation
`define SVM_SV_UNROLL 2
// log2(Number of unrolls of the SV computation)
`define SVM_SV_UNROLL_LN 1
// Number of SVs per unroll
`define SVM_SV_COUNT_UNROLLED 873
// Number of SVs for last unroll
`define SVM_SV_COUNT_UNROLLED_LAST 872
// Width of an index of a SV count
`define SVM_SV_COUNT_UNROLLED_WIDTH 10

// -log2(Gamma) value
`define SVM_LOG_GAMMA 7

// Rho values (scaled)
`define SVM_RHO_dec (dec_id == 0 ? 17'sh1fe70 : dec_id == 1 ? 17'sh1f943 : dec_id == 2 ? 17'sh1fab6 : dec_id == 3 ? 17'sh1f86c : dec_id == 4 ? 17'sh1f9ed : dec_id == 5 ? 17'sh1f812 : dec_id == 6 ? 17'sh1f789 : dec_id == 7 ? 17'sh1f982 : dec_id == 8 ? 17'sh1fab9 : dec_id == 9 ? 17'sh1f534 : dec_id == 10 ? 17'sh1fb2a : dec_id == 11 ? 17'sh1f6ec : dec_id == 12 ? 17'sh1f09e : dec_id == 13 ? 17'sh3b8 : dec_id == 14 ? 17'sh1fa0a : dec_id == 15 ? 17'sh1f1 : dec_id == 16 ? 17'sh1f8b0 : dec_id == 17 ? 17'sh1f85e : dec_id == 18 ? 17'sh1f827 : dec_id == 19 ? 17'sh1fe02 : dec_id == 20 ? 17'sh1f877 : dec_id == 21 ? 17'sh1f2ca : dec_id == 22 ? 17'sh6a8 : dec_id == 23 ? 17'sh1fc89 : dec_id == 24 ? 17'sh1f866 : dec_id == 25 ? 17'sh1f91e : dec_id == 26 ? 17'sh1f739 : dec_id == 27 ? 17'sh88 : 0)

// For each decision: 2 implied classes and 2 corresponding output indexes
`define SVM_DEC_SV_CLASS1_dec (dec_id == 0 ? 4'h0 : dec_id == 1 ? 4'h0 : dec_id == 2 ? 4'h0 : dec_id == 3 ? 4'h0 : dec_id == 4 ? 4'h0 : dec_id == 5 ? 4'h0 : dec_id == 6 ? 4'h0 : dec_id == 7 ? 4'h1 : dec_id == 8 ? 4'h1 : dec_id == 9 ? 4'h1 : dec_id == 10 ? 4'h1 : dec_id == 11 ? 4'h1 : dec_id == 12 ? 4'h1 : dec_id == 13 ? 4'h2 : dec_id == 14 ? 4'h2 : dec_id == 15 ? 4'h2 : dec_id == 16 ? 4'h2 : dec_id == 17 ? 4'h2 : dec_id == 18 ? 4'h3 : dec_id == 19 ? 4'h3 : dec_id == 20 ? 4'h3 : dec_id == 21 ? 4'h3 : dec_id == 22 ? 4'h4 : dec_id == 23 ? 4'h4 : dec_id == 24 ? 4'h4 : dec_id == 25 ? 4'h5 : dec_id == 26 ? 4'h5 : dec_id == 27 ? 4'h6 : 0)
`define SVM_DEC_SV_CLASS2_dec (dec_id == 0 ? 4'h1 : dec_id == 1 ? 4'h2 : dec_id == 2 ? 4'h3 : dec_id == 3 ? 4'h4 : dec_id == 4 ? 4'h5 : dec_id == 5 ? 4'h6 : dec_id == 6 ? 4'h7 : dec_id == 7 ? 4'h2 : dec_id == 8 ? 4'h3 : dec_id == 9 ? 4'h4 : dec_id == 10 ? 4'h5 : dec_id == 11 ? 4'h6 : dec_id == 12 ? 4'h7 : dec_id == 13 ? 4'h3 : dec_id == 14 ? 4'h4 : dec_id == 15 ? 4'h5 : dec_id == 16 ? 4'h6 : dec_id == 17 ? 4'h7 : dec_id == 18 ? 4'h4 : dec_id == 19 ? 4'h5 : dec_id == 20 ? 4'h6 : dec_id == 21 ? 4'h7 : dec_id == 22 ? 4'h5 : dec_id == 23 ? 4'h6 : dec_id == 24 ? 4'h7 : dec_id == 25 ? 4'h6 : dec_id == 26 ? 4'h7 : dec_id == 27 ? 4'h7 : 0)
`define SVM_DEC_OUT_INDEX1_dec (dec_id == 0 ? 4'h0 : dec_id == 1 ? 4'h1 : dec_id == 2 ? 4'h2 : dec_id == 3 ? 4'h3 : dec_id == 4 ? 4'h4 : dec_id == 5 ? 4'h5 : dec_id == 6 ? 4'h6 : dec_id == 7 ? 4'h1 : dec_id == 8 ? 4'h2 : dec_id == 9 ? 4'h3 : dec_id == 10 ? 4'h4 : dec_id == 11 ? 4'h5 : dec_id == 12 ? 4'h6 : dec_id == 13 ? 4'h2 : dec_id == 14 ? 4'h3 : dec_id == 15 ? 4'h4 : dec_id == 16 ? 4'h5 : dec_id == 17 ? 4'h6 : dec_id == 18 ? 4'h3 : dec_id == 19 ? 4'h4 : dec_id == 20 ? 4'h5 : dec_id == 21 ? 4'h6 : dec_id == 22 ? 4'h4 : dec_id == 23 ? 4'h5 : dec_id == 24 ? 4'h6 : dec_id == 25 ? 4'h5 : dec_id == 26 ? 4'h6 : dec_id == 27 ? 4'h6 : 0)
`define SVM_DEC_OUT_INDEX2_dec (dec_id == 0 ? 4'h0 : dec_id == 1 ? 4'h0 : dec_id == 2 ? 4'h0 : dec_id == 3 ? 4'h0 : dec_id == 4 ? 4'h0 : dec_id == 5 ? 4'h0 : dec_id == 6 ? 4'h0 : dec_id == 7 ? 4'h1 : dec_id == 8 ? 4'h1 : dec_id == 9 ? 4'h1 : dec_id == 10 ? 4'h1 : dec_id == 11 ? 4'h1 : dec_id == 12 ? 4'h1 : dec_id == 13 ? 4'h2 : dec_id == 14 ? 4'h2 : dec_id == 15 ? 4'h2 : dec_id == 16 ? 4'h2 : dec_id == 17 ? 4'h2 : dec_id == 18 ? 4'h3 : dec_id == 19 ? 4'h3 : dec_id == 20 ? 4'h3 : dec_id == 21 ? 4'h3 : dec_id == 22 ? 4'h4 : dec_id == 23 ? 4'h4 : dec_id == 24 ? 4'h4 : dec_id == 25 ? 4'h5 : dec_id == 26 ? 4'h5 : dec_id == 27 ? 4'h6 : 0)

// Number of steps for the CORDIC
`define SVM_CORDIC_STEPS 15
`define SVM_CORDIC_STEP_WIDTH 4
// CORDIC increment per step
`define SVM_CORDIC_INCR_step (step_id == 0 ? 4'h2 : step_id == 1 ? 4'h3 : step_id == 2 ? 4'h3 : step_id == 3 ? 4'h4 : step_id == 4 ? 4'h5 : step_id == 5 ? 4'h6 : step_id == 6 ? 4'h7 : step_id == 7 ? 4'h8 : step_id == 8 ? 4'h9 : step_id == 9 ? 4'ha : step_id == 10 ? 4'hb : step_id == 11 ? 4'hc : step_id == 12 ? 4'hd : step_id == 13 ? 4'he : step_id == 14 ? 4'hf : 0)
// CORDIC log value of the increment per step
`define SVM_CORDIC_INCR_LOG_step (step_id == 0 ? 17'hd47f : step_id == 1 ? 17'h62a2 : step_id == 2 ? 17'h62a2 : step_id == 3 ? 17'h2fac : step_id == 4 ? 17'h1773 : step_id == 5 ? 17'hba1 : step_id == 6 ? 17'h5cb : step_id == 7 ? 17'h2e4 : step_id == 8 ? 17'h171 : step_id == 9 ? 17'hb8 : step_id == 10 ? 17'h5c : step_id == 11 ? 17'h2e : step_id == 12 ? 17'h17 : step_id == 13 ? 17'hb : step_id == 14 ? 17'h5 : 0)


`endif
